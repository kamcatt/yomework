Vagrant.configure("2") do |config|

  # Box Settings 

  config.vm.box = "generic/ubuntu2004"

  # Provider Settings

 config.vm.provider "hyperv"

 config.vm.provider "hyperv" do |h|
    h.enable_virtualization_extensions = true 
    h.linked_clone = true 
    h.memory = 2048
    h.vmname = "ubuntu2004test"

 end

  # Network Settings
 
  #config.vm.network "forwarded_port", guest: 80, host: 8080
  #config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  #config.vm.network "private_network", ip: "192.168.16.148" 
  #config.vm.network "public_network", ip: "192.168.16.149"

  # Folder Settings 

 config.vm.synced_folder ".", "/vagrant_data", disabled: true

  #Provision Settings
  
 config.vm.provision "shell", inline: <<-SHELL

  sudo echo "root:123456" | chpasswd
 
  sudo echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf
  sudo echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf
  sudo echo "net.ipv6.conf.lo.disable_ipv6 = 1" >> /etc/sysctl.conf
  sudo sysctl -p

  sudo ufw allow ssh
  sudo ufw allow 22
  
    #install docker 

  sudo apt-get update
  sudo apt-get remove docker docker-engine docker.io containerd runc
  sudo apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg 

  sudo echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null 

  sudo apt-get update
  sudo apt-get install docker-ce docker-ce-cli containerd.io -y
  sudo docker run hello-world

#install docker-compose 

  sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  sudo chmod +x /usr/local/bin/docker-compose
  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

  sudo echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
  sudo mkdir ~/.ssh
  sudo touch authorized_keys ~/.ssh/
  sudo systemctl restart ssh
  sudo echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCbp3G0BXupLXqWXHH+wBKUPmydZdkzKig+5S6ygFBM9O+P9braA4DP9QTNyU6kjf+31e3c0YG6SZNLi4Kni5icXfUW7G2SBvSjvbww9OO92LDbhLYxYbB+tPVyC/CWOy1AShfRFwYxz4HBYVDJ/eBWx6gpECu7hyXuzHWEUb9mUZO/vMb/JQyF9irhhc9pF7sOE7qMfgYZB3cPVGyAKETHuv9Un7SRufr1zXCsDUc6911oJYKebVbnT0ioTFwv9oRDQ/YjYkai0CTTtnxFQOLsNMK0zy4TO9+vDG++m++WkWlzQI2SOmj4XaclpE8ZOHGd64LZW8qBsv7JBoxs2rAe4paBc2zXKVUQQuUxfGcXKtGL1KUDaFwlrObYDnJG51/TSkP9e5Z5az//a8lXVyIu7bImgi5JFcSupe+eHs6a9Bzs+n7KPWLOF39IC6r0/vnWlRJgZELsfdjxLsFuLBJ3ek6F+jkcUXUorE88CxxB2U+J5YTzX+9K/HqC7RcAbgU= yonder\mpostelnicu@mPostelnicu-LAP
" >> ~/.ssh/authorized_keys

sudo cat << EOF > /etc/netplan/01-netcfg.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: no
      addresses:
        - 192.168.16.156/25
      gateway4: 192.168.16.129
      nameservers:
        addresses: [8.8.8.8, 1.1.1.1]
EOF
sudo cat /etc/netplan/01-netcfg.yaml
sudo netplan apply
SHELL

end

Assignment: 

-ZFS filesystem and its capabilities;
-install and configure ZFS;
-ZFS pool & dataset;
-Install Docker > simple Postgres db on top of this filesystem( map the postgres data dir inside the container to the created zfs dataset);
-make a small update to the db > rollback using zfs > highlight the difference;
-create a bash script(cron) > periodically takes snapshots of the dataset once every 4 hours and deletes any older than 14 hours; 
***************************

Steps followed:

Created a new virtual hard drive( from Hyper-V)
--
Identified block devices: 

# lsblk
--
Partition: 

# fdisk /dev/(sdb)    > m for help 

-create a partition table 

-added two partitions on the newly create virtual hard drive 

--
Created a new pool:

# sudo zpool create <pool_name> <drive1> <drive2>

# sudo zpool create new-pool /dev/sda1 /dev/sda2

--
Verify status

# zpool status
# zpool list 

--
Created a new dataset 

# sudo zfs create <pool_name>/directory_name
# sudo zfs create new-pool/new-dataset

--
Installed Docker

--
Ran a Docker container running the latest version of Postgres 

-mapped the 5432 port from container to port 5432 on host
-named the container 'pg'
-changed the Postgres password 
-set the PGDATA folder in the container to a specific folder and mapped that folder to a folder on the host  

#docker container run -d --name=pg -p 5432:5432 -e POSTGRES_PASSWORD=secret -e PGDATA=/pgdata -v /new-pool/new-dataset/pgdata:/pgdata postgres

--
Ways to connect to the Postgres instance inside the container: 

# sudo psql -h localhost -p 5432 -U postgres

# docker container exec -it pg bash

# docker container exec -it pg psql -U postgres


--
Created a new table and inserted a couple of values: 

# create table emi( name text, id int generated by default as identity);

# insert into emi(name) values('mirc'),('kolr'),('cris');

# select * all from emi;

# \dt 


--
Took a snapshot using ZFS 

# zfs snapshot path@name

# zfs snapshot new-pool/new-dataset@new-snapshot

# zfs list -t snapshot

--
Created a new table and added new values

--
Rolled back to the previous snapshot 

# zfs rollback [snapshotname] 

# zfs rollback new-pool/new-dataset@new-snapshot

--
Stopped and removed the container 

#docker container stop pg
#docker container rm pg

--
Raised a new Postgres container 

#docker container run -d --name=pg -p 5432:5432 -e POSTGRES_PASSWORD=secret -e PGDATA=/pgdata -v /new-pool/new-dataset/pgdata:/pgdata postgres

--
Verified that there's only one table in the Postgres instance therefore rollback was succesful.
